import React from "react";
import {Card} from "antd";
import {RootState} from "../reducers";
import {useDispatch, useSelector} from "react-redux";
import {withRouter} from 'react-router-dom';
import PrintQueueCard from "../components/PrintQueueCard";
import * as actions from "../actions";
import {FullDestination, PrintQueue} from "../models";
import { connect } from 'react-redux';
import DestinationCard from "../components/DestinationCard";

function _D({}) {
	const dispatch = useDispatch();
	dispatch(actions.fetchDestinationsIfNeeded());

	const destinations = useSelector((state: RootState) => state.destinations.items);

	if (destinations && Object.keys(destinations).length > 0) {
		return <>
			{Object.values(destinations).map((d: FullDestination) => {
				// @ts-ignore look maybe you can sort out how to get that autogenerated component to spit out the right interface
				return <DestinationCard key={d._id} destination={d}/>
			})}

		</>
	}
	return <Card>:(</Card>
}

const ConfigDestinationsContainer = withRouter(connect()(_D));

export default ConfigDestinationsContainer